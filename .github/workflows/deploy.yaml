name: Deploy

on:
  push:
    branches: [develop]

env:
  GITHUB_SHA: ${{ github.sha }}
  SWARMLET_USER: git
  SWARMLET_HOST: swarmlet.dev
  SWARMLET_APP_NAME: swarmlet-website-staging
  SWARMLET_REMOTE_BRANCH: master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v1
      with:
        private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        known-hosts: ${{ env.SWARMLET_HOST }}
    - name: Deploy to swarm
      run: |        
        REMOTE_URL=$SWARMLET_USER@$SWARMLET_HOST:$SWARMLET_APP_NAME
        REMOTE_REF=$GITHUB_SHA:refs/heads/$SWARMLET_REMOTE_BRANCH
        cd $GITHUB_WORKSPACE
        git checkout -b $SWARMLET_REMOTE_BRANCH
        git fetch --unshallow
        git remote add swarm $REMOTE_URL
        GIT_COMMAND="git push swarm $SWARMLET_REMOTE_BRANCH"
        GIT_SSH_COMMAND="ssh -i $HOME/.ssh/id_rsa -F /dev/null -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" $GIT_COMMAND

# git commit -m "initial commit" --allow-empty
# REMOTE_REF=$GITHUB_SHA:refs/heads/$SWARMLET_REMOTE_BRANCH:master

# ssh-keygen -y -f $HOME/.ssh/id_rsa > $HOME/.ssh/id_rsa.pub

# mkdir -p $HOME/.ssh
# eval `ssh-agent -s`
# ssh-add - <<< $SSH_PRIVATE_KEY
# ssh-keyscan $SWARMLET_HOST >> $HOME/.ssh/known_hosts
# chown 400 $HOME/.ssh/id_rsa
